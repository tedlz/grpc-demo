syntax = "proto3";

package proto;

import "google/api/annotations.proto";
import "github.com/mwitkow/go-proto-validators/validator.proto";
import "google/options/annotations.proto";

message InnerMessage {
  int32 some_integer = 1 [(validator.field) = {int_gt:0, int_lt:100}];
  float some_float = 2 [(validator.field) = {float_gte: 0, float_lte: 1}];
}

message OuterMessage {
  string important_string = 1 [(validator.field) = {regex: "^[a-z]{2,5}$"}];
  InnerMessage inner = 2 [(validator.field) = {msg_exists: true}];
}

option (grpc.gateway.protoc_gen_swagger.options.openapiv2_swagger) = {
  security_definitions: {
    security: {
      key: "bearer"
      value: {
        type: TYPE_API_KEY
        in: IN_HEADER
        name: "Authorization"
        description: "Authentication token, prefixed by Bearer: Bearer <token>"
      }
    }
  }

  security: {
    security_requirement: {
      key: "bearer"
    }
  }

  info: {
    title: "grpc gateway simple"
    version: "1.0"
    license: {
      name: "MIT"
    }
  }

  schemes: HTTPS
};

service Simple {
  rpc Route(InnerMessage) returns(OuterMessage) {
    option (google.api.http) = {
      post: "/v1/example/route"
      body: "*"
    };

    // 禁用 bearer token
    //    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
    //      security: {} // 禁用 security key
    //    };
  }
}
